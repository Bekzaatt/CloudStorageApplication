services:
  db:
    image: postgres:16
    container_name: cloudDbApp
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - spring-cloud-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - spring-cloud-network

  minio:
    image: minio/minio
    volumes:
      - ./data:/data
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    networks:
      - spring-cloud-network

  spring:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
          condition: service_started
      minio:
          condition: service_started
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DB_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - spring-cloud-network

networks:
  spring-cloud-network:
    driver: bridge



